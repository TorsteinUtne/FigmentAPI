// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerService.Data;

namespace PowerService.Migrations
{
    [DbContext(typeof(PowerServiceContext))]
    [Migration("20210528092144_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PowerService.Data.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c43f6a50-b605-43f6-a8dd-2367b6f12023"),
                            Description = "Denne oppføringen kan brukes til å knytte aktiviteter, dokumenter, og saker mot kunder, samt spore historikk",
                            Name = "Min første kunde",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d7ec929-6fae-484f-91a5-d1b6a5d3d667"),
                            Description = "This is a record that shows some sort of interaction between two parties",
                            Name = "The subject of the activity",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb33a4aa-067e-4d80-a30d-cf9cabc2e3b5"),
                            Description = "",
                            Name = "Address for",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Billing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Billings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec734089-a981-460f-809c-3b534e52e8c3")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("984313c9-137a-415b-b61a-096f27af01e5"),
                            Description = "This field can be used to provide a more detailed description for the services offered",
                            Name = "Booking for service"
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Case", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Cases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27507aa5-8f60-49db-98ac-f5da0768615d"),
                            Description = "This field can be used to provide a more detailed description of the request",
                            Name = "Service request received",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("PowerService.Data.Models.ConfigurationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("ConfigurationItems");
                });

            modelBuilder.Entity("PowerService.Data.Models.Consent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Consents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaeb9bb5-cdb4-49de-84a7-7b758a04a0a9"),
                            Description = "Hva innebærer samtykke",
                            Name = "Samtykke for person",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48477d0d-affc-47e7-8b8c-4454754627bf"),
                            FirstName = "Ola",
                            LastName = " Nordmann",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Document", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed20ac49-ff3a-4dcf-afe3-ad22da806cbf"),
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.LicenseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("License")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LicenseTypeBillingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfUsers")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LicenseTypeBillingId");

                    b.HasIndex("OwnerId");

                    b.ToTable("LicenseTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("602380a1-3750-4c98-8c2f-75eab7d9f19a"),
                            Description = "This is a monthly subscription, paid for a full year",
                            License = "MonthlySubscription",
                            NumberOfUsers = 20,
                            ValidTill = new DateTime(2022, 5, 28, 11, 21, 43, 998, DateTimeKind.Local).AddTicks(5039)
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationLicenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("777a4315-7fd8-429d-9b9d-2f40fb67c13b"),
                            OrganizationName = "Konfigurativ"
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.PortalUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PortalUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        },
                        new
                        {
                            Id = new Guid("31653098-a8f5-43ef-90d8-e96908c2d0b7")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dcd711d0-43f4-465e-acab-7a34f6b200bf")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d5edb9b-3a0f-43e6-846b-dd643f20a9c9")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1c3c58c-1921-4beb-a44c-5af73f6df536"),
                            Description = "Avtalen som regulerer vedlikeholdet av levert løsning ",
                            Name = "Forvaltnigsavtale",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1848c65b-c879-4226-8746-9acc6e12e03a"),
                            Description = "Description for this transaction",
                            Name = "Heading for transaction",
                            OwnerId = new Guid("79dc839f-31ac-4641-a86c-50e44e12af0a")
                        });
                });

            modelBuilder.Entity("PowerService.Data.Models.ConfigurationItem", b =>
                {
                    b.HasOne("PowerService.Data.Models.Configuration", null)
                        .WithMany("ConfigurationItems")
                        .HasForeignKey("ConfigurationId");
                });

            modelBuilder.Entity("PowerService.Data.Models.Consent", b =>
                {
                    b.HasOne("PowerService.Data.Models.Contact", null)
                        .WithMany("Consents")
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("PowerService.Data.Models.LicenseType", b =>
                {
                    b.HasOne("PowerService.Data.Models.Billing", "LicenseTypeBilling")
                        .WithMany()
                        .HasForeignKey("LicenseTypeBillingId");

                    b.HasOne("PowerService.Data.Models.PortalUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });
#pragma warning restore 612, 618
        }
    }
}
